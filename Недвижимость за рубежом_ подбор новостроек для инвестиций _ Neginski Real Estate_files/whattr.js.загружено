// ╭───────────────── helpers ──────────────────╮
const INV0 = '\u200B', INV1 = '\u200C', SEP = '\u2063';
const encInv = s => Array.from(new TextEncoder().encode(s))
  .map(b=>b.toString(2).padStart(8,'0')).join('')
  .split('').map(bit=>bit==='0'?INV0:INV1).join('');

function collectPayload(){
  const ps = new URLSearchParams(location.search);
  const utm = ps.get('utm_source');
  const ya  = (document.cookie.match(/_ym_uid=([^;]+)/)||[])[1];
  const ga  = (document.cookie.match(/_ga=([^;]+)/)||[])[1];
  const ggl = ga ? ga.split('.').slice(-2).join('.') : null;
  const pth = location.pathname || '/';

  const pairs = [];
  if (utm) pairs.push(`u=${utm}`);
  if (ya)  pairs.push(`y=${ya}`);
  if (ggl) pairs.push(`g=${ggl}`);
  if (pth) pairs.push(`p=${pth}`);
  return pairs.join('&');
}

function patchLinks(){
  const payload = collectPayload();
  if (!payload) return;

  const invis = encInv(payload);

  document.querySelectorAll('a[href^="https://api.whatsapp.com/send/"]').forEach(a=>{
    try{
      const url   = new URL(a.href);
      const oldTx = url.searchParams.get('text') || '';
      // вставляем невидимый блок ПЕРЕД ПЕРВЫМ пробелом,
      // если пробела нет — в конец
      const iSpace = oldTx.indexOf(' ');
      const newTx = iSpace>-1
        ? oldTx.slice(0,iSpace) + SEP + invis + oldTx.slice(iSpace)
        : oldTx + SEP + invis;

      url.searchParams.set('text', newTx);
      a.href = url.toString();
    }catch(e){ console.error('WA-patch',e);}
  });
}

// ╰─────────────────────────────────────────────╯

// 1) когда DOM готов
document.addEventListener('DOMContentLoaded', patchLinks);

// 2) fallback: если что-то подгружается позже (SSR-hydration и т.п.)
window.addEventListener('load', patchLinks);